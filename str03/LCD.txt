
/*****************************************************************************

  Mark Bramwell, July 2010
 http://www.dfrobot.com/wiki/index.php?title=File:DSC0410.jpg
이 프로그램은 실드의 버튼을 누르면 LCD 패널과 buttons를 테스트 합니다.
화면이 해당 하나를 표시합니다

*****************************************************************************/

 #include <LiquidCrystal.h> //lcd 쓰는 라이브러리
                                                //(RS, E, DB4, DB5, DB6, DB7)
 LiquidCrystal lcd(8, 9, 4, 5, 6, 7);           //lcd 패널에 사용되는 핀을 선택

 패널과 버튼으로 사용되는 일부 값을 정의
int lcd_key     = 0;                            
int adc_key_in  = 0;

#define btnRIGHT  0      //오른쪽  0~5까지의 버튼 정의
#define btnUP     1      //위        
#define btnDOWN   2      //아래
#define btnLEFT   3      //왼
#define btnSELECT 4      //선택
#define btnNONE   5      //None 버튼 

int read_LCD_buttons(){               // 버튼 읽는 함수 0~5까지의 값을 반환
    adc_key_in = analogRead(0);       // 전압값을 아날로그값으로 바꿔 읽은 아날로그(0) 핀 센서의 값을 읽는다 , 아마 하드웨어적으로 쉴드에 키를 누르면 전압값이 바뀌게 설정 되었을 것이다. 

	// my buttons when read are centered at these valies: 0, 144, 329, 504, 741 

    if (adc_key_in > 1000) return btnNONE; //1000보다 클때 NONE 반환 (버튼이 안눌린 경우) 전압 high 상태?

    // For V1.1 us this threshold           //전압값이 
    if (adc_key_in < 50)   return btnRIGHT; //50 이하일 때 RIGHT 
    if (adc_key_in < 250)  return btnUP;    //250 이하일 때 UP
    if (adc_key_in < 450)  return btnDOWN;  //450 이하일 때 DOWN
    if (adc_key_in < 650)  return btnLEFT;  //650 이하일 때 LEFT
    if (adc_key_in < 850)  return btnSELECT;  //850 이하일 때 SELECT

   /*
     if (adc_key_in < 50)   return btnRIGHT; 
     if (adc_key_in < 195)  return btnUP;
     if (adc_key_in < 380)  return btnDOWN;
     if (adc_key_in < 555)  return btnLEFT;
     if (adc_key_in < 790)  return btnSELECT;  
   */

    return btnNONE;                // 버튼을 읽지 못했을때 이것을 반환
}

void setup(){
   lcd.begin(16, 2);               // 2행 16열 lcd 시작
   lcd.setCursor(0,0);             // 커서 (0,0)
   lcd.print("Push the buttons");  // 프린트 "Push the buttons"
}
  
void loop(){
   lcd.setCursor(9,1);             // 커서 (9,1)에
   lcd.print(millis()/1000);       // 초단위가 커서 9,1 에 출력된다 

   lcd.setCursor(0,1);             // 0,1 커서에
   lcd_key = read_LCD_buttons();   // 외부함수 read_LCD_buttons() 값을 Key에 복사한다. 0~5사이의 값

   switch (lcd_key){               // 0~ 5사이의 값

       case btnRIGHT:{             // 0 일때
            lcd.print("RIGHT ");
            break;
       }
       case btnLEFT:{
             lcd.print("LEFT   "); //  3 일때
             break;
       }   
       case btnUP:{
             lcd.print("UP    ");  //  1 일때
             break;
       }
       case btnDOWN:{
             lcd.print("DOWN  ");  //  2 일때
             break;
       }
       case btnSELECT:{
             lcd.print("SELECT");  //  4 일때
             break;
       }
       case btnNONE:{
             lcd.print("NONE  ");  // 안눌렸을 때
             break;
       }
   }
}
